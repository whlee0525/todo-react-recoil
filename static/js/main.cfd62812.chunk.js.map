{"version":3,"sources":["DataContext.ts","components/TodayColorButton.tsx","components/TodayColorSelects.tsx","components/TodayColorSelected.tsx","components/Left.tsx","components/TodayTodoInput.tsx","components/TodayTodoLine.tsx","components/TodayTodoList.tsx","components/Right.tsx","components/Title.tsx","App.tsx","index.js"],"names":["DataContext","createContext","color","setColor","todos","setTodos","StyledWrapper","styled","button","TodayColorBox","console","log","useContext","onClick","div","COLORS","TodayColorSelects","map","StyledLeft","Left","StyledInput","input","StyledButton","TodayTodoInput","useState","inputData","setInputData","handleClick","newTodo","id","Date","getUTCMilliseconds","content","done","prev","placeholder","value","onChange","e","target","onKeyPress","key","StyledButtonRemove","TodayTodoLine","onRemove","onDone","TodayTodoList","length","line","selectedId","filter","todo","StyledRight","Right","Title","title","setTitle","AppWrapper","MainContent","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfd62812.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport { State } from './types';\n\nconst DataContext = createContext<State>({\n    color: 'white',\n    setColor: () => { },\n    todos: [],\n    setTodos: () => { },\n});\n\nexport default DataContext;","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Color } from '../types';\nimport DataContext from '../DataContext';\n\ninterface Props {\n  color: Color;\n}\n\nconst StyledWrapper = styled.button`\n  margin: 10px;\n  width: 50px;\n  height: 50px;\n  background-color: ${({ color }) => color ? `${color};` : `white;`};\n\n  border: none;\n  outline: none;\n  cursor: pointer;\n`\n\nexport default function TodayColorBox({ color }: Props) {\n  console.log('[context] setColor');\n\n  const { setColor } = useContext(DataContext);\n\n  const handleClick = () => setColor(color);\n\n  return (\n    <StyledWrapper color={color} onClick={handleClick}>\n      {color}\n    </StyledWrapper>\n  )\n};","import React from 'react'\nimport styled from 'styled-components'\n\nimport TodayColorButton from './TodayColorButton';\n\nconst StyledWrapper = styled.div`\n  background-color: #9ecbd1;\n`\n\nconst COLORS = ['red', 'orange', 'yellow'];\n\nexport default function TodayColorSelects() {\n  return (\n    <StyledWrapper>\n      {COLORS.map(color => <TodayColorButton key={color} color={color} />)}\n    </StyledWrapper>\n  )\n};","import React, { useContext } from 'react'\nimport styled from 'styled-components'\n\nimport DataContext from '../DataContext';\n\nconst StyledWrapper = styled.div`\n    margin-top: 50px;\n    width: 100%;\n    height: 70px;\n    background-color: ${({ color }) => color ? `${color};` : `white;`};\n  `\n\nexport default function TodayColorBox() {\n  console.log('[context] color');\n\n  const { color } = useContext(DataContext);\n\n  return <StyledWrapper color={color}></StyledWrapper>\n};","import React from 'react';\nimport styled from 'styled-components';\nimport TodayColorSelects from './TodayColorSelects';\nimport TodayColorSelected from './TodayColorSelected';\n\nconst StyledLeft = styled.div`\n  box-sizing: border-box;\n  width: 450px;\n  padding: 50px;\n\n  text-align: center;\n  background-color: #92bdc9;\n`;\n\n\nexport default function Left() {\n  return (\n    <StyledLeft>\n      <h1>Feeling</h1>\n      <br />\n      <TodayColorSelects />\n      <TodayColorSelected />\n    </StyledLeft>\n  );\n}","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\n\nimport DataContext from '../DataContext';\n\nconst StyledInput = styled.input`\n  background-color: #9ecbd1;\n  border: none;\n  height: 70px;\n  width: 100%;\n  padding: 0 10px;\n  outline: none;\n`;\n\nconst StyledButton = styled.button`\n  width: 100%;\n  height: 40px;\n  margin-top: 10px\n`;\n\nexport default function TodayTodoInput() {\n  console.log('[context] setTodos');\n\n  const { setTodos } = useContext(DataContext);\n\n  const [inputData, setInputData] = useState('');\n\n  const handleClick = () => {\n    const newTodo = { id: new Date().getUTCMilliseconds(), content: inputData, done: false };\n    setTodos(prev => [...prev, newTodo]);\n    setInputData('');\n  }\n\n  const handleEnter = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleClick();\n    }\n  }\n\n  return (\n    <>\n      <StyledInput\n        placeholder=\"What's my plan?\"\n        value={inputData}\n        onChange={e => setInputData(e.target.value)}\n        onKeyPress={handleEnter}\n      />\n      <StyledButton onClick={handleClick} >Do!</StyledButton>\n    </>\n  );\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Todo } from '../types';\n\ninterface Props extends Omit<Todo, 'id'> {\n  onRemove: () => void;\n  onDone: () => void;\n};\n\ninterface StyledProps {\n  done?: boolean;\n}\n\nconst StyledWrapper = styled.div<StyledProps>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: #fbdad7;\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  cursor: pointer;\n\n  &:hover {\n   background-color: #e6c6c3; \n  }\n\n  > div {\n    ${({ done }) => done && `\n    text-decoration: line-through;\n    color: gray;\n  `}\n  }\n`;\n\nconst StyledButtonRemove = styled.button`\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  border: none;\n  background-color: rgba(0,0,0, 0.1);\n\n  &:hover {\n    background-color: rgba(0,0,0, 0.2);\n  }\n`;\n\nexport default function TodayTodoLine({ content, done, onRemove, onDone }: Props) {\n  return (\n    <StyledWrapper done={done} onClick={onDone}>\n      <div>{content}</div>\n      <StyledButtonRemove onClick={onRemove}>X</StyledButtonRemove>\n    </StyledWrapper>\n  );\n}","import React, { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport TodayTodoLine from './TodayTodoLine';\nimport DataContext from '../DataContext';\n\n\nconst StyledWrapper = styled.div`\n  margin-top: 50px;\n  background-color: #9ecbd1;\n  width: 100%;\n  padding: 10px;\n`;\n\nexport default function TodayTodoList() {\n  console.log('[context] todos');\n\n  const { todos, setTodos } = useContext(DataContext);\n\n  const handleRemove = (selectedId: number) =>\n    setTodos(prev => prev.filter(({ id }) => id !== selectedId));\n\n  const handleDone = (selectedId: number) =>\n    setTodos(prev =>\n      prev.map(todo => (todo.id === selectedId) ? { ...todo, done: !todo.done } : todo));\n\n  return (\n    <StyledWrapper>\n      {!todos.length && 'No todos'}\n      {todos.map(line =>\n        <TodayTodoLine\n          key={line.id}\n          onRemove={() => handleRemove(line.id)}\n          onDone={() => handleDone(line.id)}\n          {...line}\n        />)}\n    </StyledWrapper>\n  );\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport TodayTodoInput from './TodayTodoInput';\nimport TodayTodoList from './TodayTodoList';\n\nconst StyledRight = styled.div`\n  box-sizing: border-box;\n  width: 450px;\n  padding: 50px;\n\n  text-align: center;\n  background-color: #92bdc9;\n`;\n\nexport default function Right() {\n  return (\n    <StyledRight>\n      <h1>Todos</h1>\n      <br />\n      <TodayTodoInput />\n      <TodayTodoList />\n    </StyledRight>\n  );\n}","import React, { useState } from 'react';\n\nexport default function Title() {\n  console.log('[Page] Title');\n\n  const [title, setTitle] = useState('Make own title');\n\n  return (\n    <>\n      <h2>{title}</h2>\n      <input value={title} onChange={e => setTitle(e.target.value)} />\n    </>);\n}","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport DataContext from './DataContext';\nimport Left from './components/Left';\nimport Right from './components/Right';\nimport Title from './components/Title';\nimport { Todo, Color } from './types';\n\nconst AppWrapper = styled.div`\n  width: 1080px;\n  min-height: 720px;\n  margin-top: 100px;\n  margin-right: auto;\n  margin-left: auto;\n  background-color: #dce0e1;\n\n  padding: 50px 0;\n  text-align: center;\n`;\n\nconst MainContent = styled.div`\n  margin-top: 50px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n`;\n\nexport default function App() {\n  const [color, setColor] = useState<Color>('white');\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  return (\n    <AppWrapper>\n      <Title />\n      <DataContext.Provider value={{ color, setColor, todos, setTodos }} >\n        <MainContent>\n          <Left />\n          <Right />\n        </MainContent>\n      </DataContext.Provider>\n    </AppWrapper>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}